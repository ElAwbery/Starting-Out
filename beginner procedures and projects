#this file is not super easy to read, because I haven't yet tied up Python with Git. This is just a cut & paste list of procedures that I've been working on, to keep a record of where I am at. The color coding in the IDLE program that comes bundled with the Python Interpreter is useful. 

#I'm learning Python 3.6.4
#What follows are tests I have run to check that I understand basic Python syntax

#format a string using different data types: one string, one integer and one float as arguments

name = 'Peter'
age = 42
π = 3.14159265
e = 2.7182818284

birthday = 'Happy birthday %s, now you are %d you should know some math. Recite after me, π is equal to %1.5f and e is %1.6f' %(name, age, π, e)
print (birthday)

#this is a different way to get the same result:

alternate_birthday = 'Happy birthday {0:s}, now you are {1:d} years old, you should know some math. Recite after me, π is equal to {2:1.5f} and e is {3:1.6f}' .format('Peter', 42, 3.14159265, 2.7182818284)
print (alternate_birthday)

#using the % operator to format a string seems prefereable to me, because you could assign any new argument to the variables without having to change the string-formatting procedure. 

#list practice

myList = [8, 9, 'blah', 4, 7, 'foo']
print (myList)
print (myList [2])
print (myList [-1])

myList2 = myList[1:5]
print (myList2)

myList [1]=20
print (myList)

myList.append ('frip')
print (myList)

del myList [5]
print (myList)


#dictionary practice

myDict = {'StringIsOkHere':3.4151, 2.7:'e is second place', 9:'stringkey', 7.6:7}
print (myDict)

#print a selected item from myDict
print (myDict [2.7])
print (myDict ['StringIsOkHere'])

#modify myDict
myDict [9]='numbers'
myDict ['addon']='nother one string'
del myDict ['StringIsOkHere']
print (myDict)

#making interactive programs:

#using input for interactive procedures

myName = input ("Please enter your name:")
myAge = input ("What about your age:")
print ("Hello World, my name is", myName, "and I am", myAge, "years old.")

#testing triple quote
print (''' so how does this work?
If I write text
on different lines,
Will it keep the formatting.''')

#escape characters
print ('Hello \t world')
print ('maybe I just \n want to have \n a load of things \n show on new lines')


#Control flow tools

userInput = input ('Enter 1 or 2:')

if userInput == '1':
    print ('oh look you chose 1')
    print ('this is not an alternative')
elif userInput == '2':
    print ('heh is that really a 2, I don\'t think so, it\'s not an integer')
    print ('it\'s like a braindead cond clause')
else:
    print ('You did not enter a valid number.')
    
#generated my own task, to check I understood the for loop: use a for loop with a list

icecream = "vanilla"

flavours = ["chocolate", "strawberry", "mango", "banana", "cookies"]

for add_flavour in flavours:
    print (icecream)
    icecream = add_flavour
    
#this includes an if clause inside a for loop
#took a while to get the order exactly right

icecream = "vanilla"

flavours = ["chocolate", "strawberry", "mango", "banana", "cookies"]

for add_flavour in flavours:
    print (icecream)
    icecream = add_flavour
    if icecream == "banana":
        print ("with mango or with cherry")


#range function, useful inclusion in for loops:

for i in range (5):
    print (i)

for p in range (3, 27, 4):
    print (p)
    


